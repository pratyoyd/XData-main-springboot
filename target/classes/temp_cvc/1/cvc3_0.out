Invalid.
Current scope level is 49.
%Satisfiable  Variable Assignment: % 
ASSERT (ISNULL_C_CUSTKEY = (LAMBDA (uf_0: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 1004)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_0 = -99996) THEN TRUE ELSE IF (uf_0 = -99997) THEN TRUE ELSE IF (uf_0 = -99998) THEN TRUE ELSE IF (uf_0 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_C_CUSTKEY(-99996);
ASSERT ISNULL_C_CUSTKEY(-99997);
ASSERT ISNULL_C_CUSTKEY(-99998);
ASSERT ISNULL_C_CUSTKEY(-99999);
ASSERT (_reach_C_NAME = _reach_C_NAME);
ASSERT (ISNULL_C_NAME = (LAMBDA (uf_1: C_NAME): FALSE));
ASSERT (_reach_C_ADDRESS = _reach_C_ADDRESS);
ASSERT (ISNULL_C_ADDRESS = (LAMBDA (uf_2: C_ADDRESS): FALSE));
ASSERT (ISNULL_C_NATIONKEY = (LAMBDA (uf_3: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 1004)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_3 = -99996) THEN TRUE ELSE IF (uf_3 = -99997) THEN TRUE ELSE IF (uf_3 = -99998) THEN TRUE ELSE IF (uf_3 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_C_NATIONKEY(-99996);
ASSERT ISNULL_C_NATIONKEY(-99997);
ASSERT ISNULL_C_NATIONKEY(-99998);
ASSERT ISNULL_C_NATIONKEY(-99999);
ASSERT (_reach_C_PHONE = _reach_C_PHONE);
ASSERT (ISNULL_C_PHONE = (LAMBDA (uf_4: C_PHONE): FALSE));
ASSERT (ISNULL_C_ACCTBAL = (LAMBDA (uf_5: SUBTYPE((LAMBDA (x: REAL): (((x >= (0 / 10)) AND (x <= (10000 / 10))) OR ((x > -100000) AND (x < -99995)))))): IF (uf_5 = -99996) THEN TRUE ELSE IF (uf_5 = -99997) THEN TRUE ELSE IF (uf_5 = -99998) THEN TRUE ELSE IF (uf_5 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_C_ACCTBAL(-99996);
ASSERT ISNULL_C_ACCTBAL(-99997);
ASSERT ISNULL_C_ACCTBAL(-99998);
ASSERT ISNULL_C_ACCTBAL(-99999);
ASSERT (_reach_C_MKTSEGMENT = _reach_C_MKTSEGMENT);
ASSERT (ISNULL_C_MKTSEGMENT = (LAMBDA (uf_6: C_MKTSEGMENT): FALSE));
ASSERT (_reach_C_COMMENT = _reach_C_COMMENT);
ASSERT (ISNULL_C_COMMENT = (LAMBDA (uf_7: C_COMMENT): FALSE));
ASSERT (ISNULL_L_ORDERKEY = (LAMBDA (uf_8: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 1004)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_8 = -99996) THEN TRUE ELSE IF (uf_8 = -99997) THEN TRUE ELSE IF (uf_8 = -99998) THEN TRUE ELSE IF (uf_8 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_L_ORDERKEY(-99996);
ASSERT ISNULL_L_ORDERKEY(-99997);
ASSERT ISNULL_L_ORDERKEY(-99998);
ASSERT ISNULL_L_ORDERKEY(-99999);
ASSERT (ISNULL_L_PARTKEY = (LAMBDA (uf_9: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 1004)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_9 = -99996) THEN TRUE ELSE IF (uf_9 = -99997) THEN TRUE ELSE IF (uf_9 = -99998) THEN TRUE ELSE IF (uf_9 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_L_PARTKEY(-99996);
ASSERT ISNULL_L_PARTKEY(-99997);
ASSERT ISNULL_L_PARTKEY(-99998);
ASSERT ISNULL_L_PARTKEY(-99999);
ASSERT (ISNULL_L_SUPPKEY = (LAMBDA (uf_10: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 1004)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_10 = -99996) THEN TRUE ELSE IF (uf_10 = -99997) THEN TRUE ELSE IF (uf_10 = -99998) THEN TRUE ELSE IF (uf_10 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_L_SUPPKEY(-99996);
ASSERT ISNULL_L_SUPPKEY(-99997);
ASSERT ISNULL_L_SUPPKEY(-99998);
ASSERT ISNULL_L_SUPPKEY(-99999);
ASSERT (ISNULL_L_LINENUMBER = (LAMBDA (uf_11: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 1004)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_11 = -99996) THEN TRUE ELSE IF (uf_11 = -99997) THEN TRUE ELSE IF (uf_11 = -99998) THEN TRUE ELSE IF (uf_11 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_L_LINENUMBER(-99996);
ASSERT ISNULL_L_LINENUMBER(-99997);
ASSERT ISNULL_L_LINENUMBER(-99998);
ASSERT ISNULL_L_LINENUMBER(-99999);
ASSERT (ISNULL_L_QUANTITY = (LAMBDA (uf_12: SUBTYPE((LAMBDA (x: REAL): (((x >= (0 / 10)) AND (x <= (10000 / 10))) OR ((x > -100000) AND (x < -99995)))))): IF (uf_12 = -99996) THEN TRUE ELSE IF (uf_12 = -99997) THEN TRUE ELSE IF (uf_12 = -99998) THEN TRUE ELSE IF (uf_12 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_L_QUANTITY(-99996);
ASSERT ISNULL_L_QUANTITY(-99997);
ASSERT ISNULL_L_QUANTITY(-99998);
ASSERT ISNULL_L_QUANTITY(-99999);
ASSERT (ISNULL_L_EXTENDEDPRICE = (LAMBDA (uf_13: SUBTYPE((LAMBDA (x: REAL): (((x >= (0 / 10)) AND (x <= (10000 / 10))) OR ((x > -100000) AND (x < -99995)))))): IF (uf_13 = -99996) THEN TRUE ELSE IF (uf_13 = -99997) THEN TRUE ELSE IF (uf_13 = -99998) THEN TRUE ELSE IF (uf_13 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_L_EXTENDEDPRICE(-99996);
ASSERT ISNULL_L_EXTENDEDPRICE(-99997);
ASSERT ISNULL_L_EXTENDEDPRICE(-99998);
ASSERT ISNULL_L_EXTENDEDPRICE(-99999);
ASSERT (ISNULL_L_DISCOUNT = (LAMBDA (uf_14: SUBTYPE((LAMBDA (x: REAL): (((x >= (0 / 10)) AND (x <= (10000 / 10))) OR ((x > -100000) AND (x < -99995)))))): IF (uf_14 = -99996) THEN TRUE ELSE IF (uf_14 = -99997) THEN TRUE ELSE IF (uf_14 = -99998) THEN TRUE ELSE IF (uf_14 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_L_DISCOUNT(-99996);
ASSERT ISNULL_L_DISCOUNT(-99997);
ASSERT ISNULL_L_DISCOUNT(-99998);
ASSERT ISNULL_L_DISCOUNT(-99999);
ASSERT (ISNULL_L_TAX = (LAMBDA (uf_15: SUBTYPE((LAMBDA (x: REAL): (((x >= (0 / 10)) AND (x <= (10000 / 10))) OR ((x > -100000) AND (x < -99995)))))): IF (uf_15 = -99996) THEN TRUE ELSE IF (uf_15 = -99997) THEN TRUE ELSE IF (uf_15 = -99998) THEN TRUE ELSE IF (uf_15 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_L_TAX(-99996);
ASSERT ISNULL_L_TAX(-99997);
ASSERT ISNULL_L_TAX(-99998);
ASSERT ISNULL_L_TAX(-99999);
ASSERT (_reach_L_RETURNFLAG = _reach_L_RETURNFLAG);
ASSERT (ISNULL_L_RETURNFLAG = (LAMBDA (uf_16: L_RETURNFLAG): FALSE));
ASSERT (_reach_L_LINESTATUS = _reach_L_LINESTATUS);
ASSERT (ISNULL_L_LINESTATUS = (LAMBDA (uf_17: L_LINESTATUS): FALSE));
ASSERT (_reach_L_SHIPINSTRUCT = _reach_L_SHIPINSTRUCT);
ASSERT (ISNULL_L_SHIPINSTRUCT = (LAMBDA (uf_18: L_SHIPINSTRUCT): FALSE));
ASSERT (_reach_L_SHIPMODE = _reach_L_SHIPMODE);
ASSERT (ISNULL_L_SHIPMODE = (LAMBDA (uf_19: L_SHIPMODE): FALSE));
ASSERT (_reach_L_COMMENT = _reach_L_COMMENT);
ASSERT (ISNULL_L_COMMENT = (LAMBDA (uf_20: L_COMMENT): FALSE));
ASSERT (ISNULL_O_ORDERKEY = (LAMBDA (uf_21: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 1004)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_21 = -99996) THEN TRUE ELSE IF (uf_21 = -99997) THEN TRUE ELSE IF (uf_21 = -99998) THEN TRUE ELSE IF (uf_21 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_O_ORDERKEY(-99996);
ASSERT ISNULL_O_ORDERKEY(-99997);
ASSERT ISNULL_O_ORDERKEY(-99998);
ASSERT ISNULL_O_ORDERKEY(-99999);
ASSERT (ISNULL_O_CUSTKEY = (LAMBDA (uf_22: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 1004)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_22 = -99996) THEN TRUE ELSE IF (uf_22 = -99997) THEN TRUE ELSE IF (uf_22 = -99998) THEN TRUE ELSE IF (uf_22 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_O_CUSTKEY(-99996);
ASSERT ISNULL_O_CUSTKEY(-99997);
ASSERT ISNULL_O_CUSTKEY(-99998);
ASSERT ISNULL_O_CUSTKEY(-99999);
ASSERT (_reach_O_ORDERSTATUS = _reach_O_ORDERSTATUS);
ASSERT (ISNULL_O_ORDERSTATUS = (LAMBDA (uf_23: O_ORDERSTATUS): FALSE));
ASSERT (ISNULL_O_TOTALPRICE = (LAMBDA (uf_24: SUBTYPE((LAMBDA (x: REAL): (((x >= (0 / 10)) AND (x <= (10000 / 10))) OR ((x > -100000) AND (x < -99995)))))): IF (uf_24 = -99996) THEN TRUE ELSE IF (uf_24 = -99997) THEN TRUE ELSE IF (uf_24 = -99998) THEN TRUE ELSE IF (uf_24 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_O_TOTALPRICE(-99996);
ASSERT ISNULL_O_TOTALPRICE(-99997);
ASSERT ISNULL_O_TOTALPRICE(-99998);
ASSERT ISNULL_O_TOTALPRICE(-99999);
ASSERT (_reach_O_ORDERPRIORITY = _reach_O_ORDERPRIORITY);
ASSERT (ISNULL_O_ORDERPRIORITY = (LAMBDA (uf_25: O_ORDERPRIORITY): FALSE));
ASSERT (_reach_O_CLERK = _reach_O_CLERK);
ASSERT (ISNULL_O_CLERK = (LAMBDA (uf_26: O_CLERK): FALSE));
ASSERT (ISNULL_O_SHIPPRIORITY = (LAMBDA (uf_27: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 1004)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_27 = -99996) THEN TRUE ELSE IF (uf_27 = -99997) THEN TRUE ELSE IF (uf_27 = -99998) THEN TRUE ELSE IF (uf_27 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_O_SHIPPRIORITY(-99996);
ASSERT ISNULL_O_SHIPPRIORITY(-99997);
ASSERT ISNULL_O_SHIPPRIORITY(-99998);
ASSERT ISNULL_O_SHIPPRIORITY(-99999);
ASSERT (_reach_O_COMMENT = _reach_O_COMMENT);
ASSERT (ISNULL_O_COMMENT = (LAMBDA (uf_28: O_COMMENT): FALSE));
ASSERT (O_CUSTOMER = (ARRAY (arr_var: INT): (1, _C_uNAME__C_uNAME_u1, _C_uADDRESS__C_uADDRESS_u1, 1, _C_uPHONE__1, 1, _C_uMKTSEGMENT__BUILDING, _C_uCOMMENT__C_uCOMMENT_u1)));
ASSERT (O_LINEITEM = (ARRAY (arr_var: INT): (1, 1, 1, 1, 1, 1, 1, 1, _L_uRETURNFLAG__1, _L_uLINESTATUS__1, 9204, 8000, 8000, _L_uSHIPINSTRUCT__1, _L_uSHIPMODE__1, _L_uCOMMENT__L_uCOMMENT_u1)));
ASSERT (O_ORDERS = (ARRAY (arr_var: INT): (1, 1, _O_uORDERSTATUS__1, 1, 8000, _O_uORDERPRIORITY__1, _O_uCLERK__1, 1, _O_uCOMMENT__O_uCOMMENT_u1)));
ASSERT (O_CUSTOMER[1] = (1, _C_uNAME__C_uNAME_u1, _C_uADDRESS__C_uADDRESS_u1, 1, _C_uPHONE__1, 1, _C_uMKTSEGMENT__BUILDING, _C_uCOMMENT__C_uCOMMENT_u1));
ASSERT (O_ORDERS[1] = (1, 1, _O_uORDERSTATUS__1, 1, 8000, _O_uORDERPRIORITY__1, _O_uCLERK__1, 1, _O_uCOMMENT__O_uCOMMENT_u1));
ASSERT (O_LINEITEM[1] = (1, 1, 1, 1, 1, 1, 1, 1, _L_uRETURNFLAG__1, _L_uLINESTATUS__1, 9204, 8000, 8000, _L_uSHIPINSTRUCT__1, _L_uSHIPMODE__1, _L_uCOMMENT__L_uCOMMENT_u1));
ASSERT NOT ISNULL_C_MKTSEGMENT(_C_uMKTSEGMENT__BUILDING);
ASSERT NOT ISNULL_C_CUSTKEY(1);
ASSERT NOT ISNULL_O_CUSTKEY(1);
ASSERT NOT ISNULL_C_NATIONKEY(1);
ASSERT NOT ISNULL_O_SHIPPRIORITY(1);
ASSERT NOT ISNULL_O_ORDERKEY(1);
ASSERT NOT ISNULL_L_ORDERKEY(1);
ASSERT NOT ISNULL_L_LINENUMBER(1);
ASSERT NOT ISNULL_L_SUPPKEY(1);
ASSERT NOT ISNULL_L_PARTKEY(1);
ASSERT NOT ISNULL_C_ACCTBAL(1);
ASSERT NOT ISNULL_L_TAX(1);
ASSERT NOT ISNULL_L_DISCOUNT(1);
ASSERT NOT ISNULL_O_TOTALPRICE(1);
ASSERT NOT ISNULL_L_QUANTITY(1);
ASSERT NOT ISNULL_L_EXTENDEDPRICE(1);
ASSERT NOT ISNULL_O_COMMENT(_O_uCOMMENT__O_uCOMMENT_u1);
ASSERT NOT ISNULL_O_CLERK(_O_uCLERK__1);
ASSERT NOT ISNULL_O_ORDERPRIORITY(_O_uORDERPRIORITY__1);
ASSERT NOT ISNULL_O_ORDERSTATUS(_O_uORDERSTATUS__1);
ASSERT NOT ISNULL_L_COMMENT(_L_uCOMMENT__L_uCOMMENT_u1);
ASSERT NOT ISNULL_L_SHIPMODE(_L_uSHIPMODE__1);
ASSERT NOT ISNULL_L_SHIPINSTRUCT(_L_uSHIPINSTRUCT__1);
ASSERT NOT ISNULL_L_LINESTATUS(_L_uLINESTATUS__1);
ASSERT NOT ISNULL_L_RETURNFLAG(_L_uRETURNFLAG__1);
ASSERT NOT ISNULL_C_COMMENT(_C_uCOMMENT__C_uCOMMENT_u1);
ASSERT NOT ISNULL_C_PHONE(_C_uPHONE__1);
ASSERT NOT ISNULL_C_ADDRESS(_C_uADDRESS__C_uADDRESS_u1);
ASSERT NOT ISNULL_C_NAME(_C_uNAME__C_uNAME_u1);
