Invalid.
Current scope level is 11.
%Satisfiable  Variable Assignment: % 
ASSERT (_reach_ID = _reach_ID);
ASSERT (ISNULL_ID = (LAMBDA (uf_0: ID): IF (uf_0 = _ID__70557) THEN FALSE ELSE IF (uf_0 = _ID__ID_u16) THEN FALSE ELSE IF (uf_0 = _ID__19991) THEN FALSE ELSE IF (uf_0 = NULL_ID_3) THEN TRUE ELSE IF (uf_0 = _ID__76543) THEN FALSE ELSE IF (uf_0 = _ID__ID_u17) THEN FALSE ELSE IF (uf_0 = _ID__23121) THEN FALSE ELSE IF (uf_0 = NULL_ID_4) THEN TRUE ELSE IF (uf_0 = _ID__76653) THEN FALSE ELSE IF (uf_0 = _ID__ID_u18) THEN FALSE ELSE IF (uf_0 = _ID__44553) THEN FALSE ELSE IF (uf_0 = _ID__98765) THEN FALSE ELSE IF (uf_0 = _ID__ID_u19) THEN FALSE ELSE IF (uf_0 = _ID__45678) THEN FALSE ELSE IF (uf_0 = _ID__98988) THEN FALSE ELSE IF (uf_0 = _ID__ID_u20) THEN FALSE ELSE IF (uf_0 = _ID__54321) THEN FALSE ELSE IF (uf_0 = _ID__ID_u14) THEN FALSE ELSE IF (uf_0 = _ID__00128) THEN FALSE ELSE IF (uf_0 = NULL_ID_1) THEN TRUE ELSE IF (uf_0 = _ID__55739) THEN FALSE ELSE IF (uf_0 = _ID__ID_u15) THEN FALSE ELSE IF (uf_0 = _ID__12345) THEN FALSE ELSE TRUE ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF));
ASSERT NOT ISNULL_ID(_ID__00128);
ASSERT NOT ISNULL_ID(_ID__12345);
ASSERT NOT ISNULL_ID(_ID__19991);
ASSERT NOT ISNULL_ID(_ID__23121);
ASSERT NOT ISNULL_ID(_ID__44553);
ASSERT NOT ISNULL_ID(_ID__45678);
ASSERT NOT ISNULL_ID(_ID__54321);
ASSERT NOT ISNULL_ID(_ID__55739);
ASSERT NOT ISNULL_ID(_ID__70557);
ASSERT NOT ISNULL_ID(_ID__76543);
ASSERT NOT ISNULL_ID(_ID__76653);
ASSERT NOT ISNULL_ID(_ID__98765);
ASSERT NOT ISNULL_ID(_ID__98988);
ASSERT NOT ISNULL_ID(_ID__ID_u14);
ASSERT NOT ISNULL_ID(_ID__ID_u15);
ASSERT NOT ISNULL_ID(_ID__ID_u16);
ASSERT NOT ISNULL_ID(_ID__ID_u17);
ASSERT NOT ISNULL_ID(_ID__ID_u18);
ASSERT NOT ISNULL_ID(_ID__ID_u19);
ASSERT NOT ISNULL_ID(_ID__ID_u20);
ASSERT ISNULL_ID(NULL_ID_1);
ASSERT ISNULL_ID(NULL_ID_2);
ASSERT ISNULL_ID(NULL_ID_3);
ASSERT ISNULL_ID(NULL_ID_4);
ASSERT (_reach_NAME = _reach_NAME);
ASSERT (ISNULL_NAME = (LAMBDA (uf_1: NAME): IF (uf_1 = _NAME__Snow) THEN FALSE ELSE IF (uf_1 = NULL_NAME_1) THEN TRUE ELSE IF (uf_1 = _NAME__Sanchez) THEN FALSE ELSE IF (uf_1 = _NAME__NAME_u15) THEN FALSE ELSE IF (uf_1 = _NAME__Tanaka) THEN FALSE ELSE IF (uf_1 = NULL_NAME_2) THEN TRUE ELSE IF (uf_1 = _NAME__Shankar) THEN FALSE ELSE IF (uf_1 = _NAME__NAME_u16) THEN FALSE ELSE IF (uf_1 = _NAME__Bourikas) THEN FALSE ELSE IF (uf_1 = NULL_NAME_3) THEN TRUE ELSE IF (uf_1 = _NAME__Williams) THEN FALSE ELSE IF (uf_1 = _NAME__NAME_u17) THEN FALSE ELSE IF (uf_1 = _NAME__Peltier) THEN FALSE ELSE IF (uf_1 = NULL_NAME_4) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF));
ASSERT NOT ISNULL_NAME(_NAME__Snow);
ASSERT NOT ISNULL_NAME(_NAME__Tanaka);
ASSERT NOT ISNULL_NAME(_NAME__Bourikas);
ASSERT NOT ISNULL_NAME(_NAME__Peltier);
ASSERT NOT ISNULL_NAME(_NAME__Aoi);
ASSERT NOT ISNULL_NAME(_NAME__Brandt);
ASSERT NOT ISNULL_NAME(_NAME__Zhang);
ASSERT NOT ISNULL_NAME(_NAME__Sanchez);
ASSERT NOT ISNULL_NAME(_NAME__Shankar);
ASSERT NOT ISNULL_NAME(_NAME__Williams);
ASSERT NOT ISNULL_NAME(_NAME__Chavez);
ASSERT NOT ISNULL_NAME(_NAME__Levy);
ASSERT NOT ISNULL_NAME(_NAME__Brown);
ASSERT NOT ISNULL_NAME(_NAME__NAME_u14);
ASSERT NOT ISNULL_NAME(_NAME__NAME_u15);
ASSERT NOT ISNULL_NAME(_NAME__NAME_u16);
ASSERT NOT ISNULL_NAME(_NAME__NAME_u17);
ASSERT NOT ISNULL_NAME(_NAME__NAME_u18);
ASSERT NOT ISNULL_NAME(_NAME__NAME_u19);
ASSERT NOT ISNULL_NAME(_NAME__NAME_u20);
ASSERT ISNULL_NAME(NULL_NAME_1);
ASSERT ISNULL_NAME(NULL_NAME_2);
ASSERT ISNULL_NAME(NULL_NAME_3);
ASSERT ISNULL_NAME(NULL_NAME_4);
ASSERT (_reach_DEPT_NAME = _reach_DEPT_NAME);
ASSERT (ISNULL_DEPT_NAME = (LAMBDA (uf_2: DEPT_NAME): IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u8) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u15) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__History) THEN FALSE ELSE IF (uf_2 = NULL_DEPT_NAME_2) THEN TRUE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u9) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u16) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__Physics) THEN FALSE ELSE IF (uf_2 = NULL_DEPT_NAME_3) THEN TRUE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u10) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u17) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__Music) THEN FALSE ELSE IF (uf_2 = NULL_DEPT_NAME_4) THEN TRUE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u11) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u18) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__Comp_d_ubSci_d) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u12) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u19) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__Biology) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u13) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u20) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__Elec_d_ubEng_d) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__DEPT_uNAME_u14) THEN FALSE ELSE IF (uf_2 = _DEPT_uNAME__Finance) THEN FALSE ELSE TRUE ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF));
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Finance);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__History);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Physics);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Music);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Comp_d_ubSci_d);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Biology);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Elec_d_ubEng_d);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u8);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u9);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u10);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u11);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u12);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u13);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u14);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u15);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u16);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u17);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u18);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u19);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u20);
ASSERT ISNULL_DEPT_NAME(NULL_DEPT_NAME_1);
ASSERT ISNULL_DEPT_NAME(NULL_DEPT_NAME_2);
ASSERT ISNULL_DEPT_NAME(NULL_DEPT_NAME_3);
ASSERT ISNULL_DEPT_NAME(NULL_DEPT_NAME_4);
ASSERT (ISNULL_TOT_CRED = (LAMBDA (uf_3: SUBTYPE((LAMBDA (x: INT): (((x > -4) AND (x < 124)) OR ((x > -100000) AND (x < -99995)))))): IF (uf_3 = -99996) THEN TRUE ELSE IF (uf_3 = -99997) THEN TRUE ELSE IF (uf_3 = -99998) THEN TRUE ELSE IF (uf_3 = -99999) THEN TRUE ELSE FALSE ENDIF ENDIF ENDIF ENDIF));
ASSERT ISNULL_TOT_CRED(-99996);
ASSERT ISNULL_TOT_CRED(-99997);
ASSERT ISNULL_TOT_CRED(-99998);
ASSERT ISNULL_TOT_CRED(-99999);
ASSERT (O_STUDENT = (ARRAY (arr_var: INT): (_ID__00128, _NAME__Snow, _DEPT_uNAME__Finance, 29)));
ASSERT (O_STUDENT[1] = (_ID__00128, _NAME__Snow, _DEPT_uNAME__Finance, 29));
ASSERT NOT ISNULL_TOT_CRED(29);
