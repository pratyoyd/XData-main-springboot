

%------------------------------------------------------------
%MUTATION TYPE: DATASET TO KILL COLUMN REPLACEMENT IN PROJECTION 
%------------------------------------------------------------

DATATYPE 
DEPT_NAME = _DEPT_uNAME__Biology | _DEPT_uNAME__Comp_d_ubSci_d | _DEPT_uNAME__Elec_d_ubEng_d | _DEPT_uNAME__Finance | _DEPT_uNAME__History | _DEPT_uNAME__Music | _DEPT_uNAME__Physics | _DEPT_uNAME__DEPT_uNAME_u8 | _DEPT_uNAME__DEPT_uNAME_u9 | _DEPT_uNAME__DEPT_uNAME_u10 | _DEPT_uNAME__DEPT_uNAME_u11 | _DEPT_uNAME__DEPT_uNAME_u12 | _DEPT_uNAME__DEPT_uNAME_u13 | _DEPT_uNAME__DEPT_uNAME_u14 | _DEPT_uNAME__DEPT_uNAME_u15 | _DEPT_uNAME__DEPT_uNAME_u16 | _DEPT_uNAME__DEPT_uNAME_u17 | _DEPT_uNAME__DEPT_uNAME_u18 | _DEPT_uNAME__DEPT_uNAME_u19 | _DEPT_uNAME__DEPT_uNAME_u20 | NULL_DEPT_NAME_1 | NULL_DEPT_NAME_2 | NULL_DEPT_NAME_3 | NULL_DEPT_NAME_4 END
;ISNULL_DEPT_NAME : DEPT_NAME -> BOOLEAN;
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Biology);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Comp_d_ubSci_d);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Elec_d_ubEng_d);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Finance);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__History);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Music);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__Physics);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u8);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u9);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u10);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u11);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u12);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u13);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u14);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u15);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u16);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u17);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u18);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u19);
ASSERT NOT ISNULL_DEPT_NAME(_DEPT_uNAME__DEPT_uNAME_u20);
ASSERT ISNULL_DEPT_NAME(NULL_DEPT_NAME_1);
ASSERT ISNULL_DEPT_NAME(NULL_DEPT_NAME_2);
ASSERT ISNULL_DEPT_NAME(NULL_DEPT_NAME_3);
ASSERT ISNULL_DEPT_NAME(NULL_DEPT_NAME_4);


DATATYPE 
BUILDING = _BUILDING__Taylor | _BUILDING__Packard | _BUILDING__Painter | _BUILDING__Watson | _BUILDING__BUILDING_u5 | _BUILDING__BUILDING_u6 | _BUILDING__BUILDING_u7 | _BUILDING__BUILDING_u8 | _BUILDING__BUILDING_u9 | _BUILDING__BUILDING_u10 | _BUILDING__BUILDING_u11 | _BUILDING__BUILDING_u12 | _BUILDING__BUILDING_u13 | _BUILDING__BUILDING_u14 | _BUILDING__BUILDING_u15 | _BUILDING__BUILDING_u16 | _BUILDING__BUILDING_u17 | _BUILDING__BUILDING_u18 | _BUILDING__BUILDING_u19 | _BUILDING__BUILDING_u20 | NULL_BUILDING_1 | NULL_BUILDING_2 | NULL_BUILDING_3 | NULL_BUILDING_4 END
;ISNULL_BUILDING : BUILDING -> BOOLEAN;
ASSERT NOT ISNULL_BUILDING(_BUILDING__Taylor);
ASSERT NOT ISNULL_BUILDING(_BUILDING__Packard);
ASSERT NOT ISNULL_BUILDING(_BUILDING__Painter);
ASSERT NOT ISNULL_BUILDING(_BUILDING__Watson);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u5);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u6);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u7);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u8);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u9);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u10);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u11);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u12);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u13);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u14);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u15);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u16);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u17);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u18);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u19);
ASSERT NOT ISNULL_BUILDING(_BUILDING__BUILDING_u20);
ASSERT ISNULL_BUILDING(NULL_BUILDING_1);
ASSERT ISNULL_BUILDING(NULL_BUILDING_2);
ASSERT ISNULL_BUILDING(NULL_BUILDING_3);
ASSERT ISNULL_BUILDING(NULL_BUILDING_4);


BUDGET : TYPE = SUBTYPE (LAMBDA (x: REAL) : (x >= 500000/10 AND x <= 1200000/10) OR (x > -100000 AND x < -99995));


ISNULL_BUDGET : BUDGET -> BOOLEAN;
ASSERT ISNULL_BUDGET(-99996);
ASSERT ISNULL_BUDGET(-99997);
ASSERT ISNULL_BUDGET(-99998);
ASSERT ISNULL_BUDGET(-99999);






%------------------------------------------------------------
% Tuple Types for Relations
 
%------------------------------------------------------------


%------------------------------------------------------------
% Tuple Types for Relations
 
%------------------------------------------------------------
DEPARTMENT_TupleType: TYPE = [DEPT_NAME, BUILDING, BUDGET];
O_DEPARTMENT: ARRAY INT OF DEPARTMENT_TupleType;


%------------------------------------------------------------
%FOREIGN  KEY CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
%END OF FOREIGN  KEY CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
%PRIMARY KEY CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
%END OF PRIMARY KEY CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
%UNIQUE CONSTRAINTS  FOR PRIMARY KEY TO SATISFY CONSTRAINED AGGREGATION
%------------------------------------------------------------


%------------------------------------------------------------
%END OF UNIQUE CONSTRAINTS  FOR PRIMARY KEY TO SATISFY CONSTRAINED AGGREGATION
%------------------------------------------------------------




%------------------------------------------------------------
% CONSTRAINTS OF THIS BLOCK 
%------------------------------------------------------------


%------------------------------------------------------------
% CONSTRAINTS FOR THIS CONJUNCT 
%------------------------------------------------------------


%------------------------------------------------------------
% WHERE CLAUSE SUBQUERY BLOCK CONSTRAINTS 
%------------------------------------------------------------


%------------------------------------------------------------
% END OF WHERE CLAUSE SUBQUERY BLOCK CONSTRAINTS 
%------------------------------------------------------------

 ASSERT((O_DEPARTMENT[1].2 > 40000)  ); 


%------------------------------------------------------------
%GROUP BY CLAUSE CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
%END OF GROUP BY CLAUSE CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
%HAVING CLAUSE CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
%END OF HAVING CLAUSE CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
%PARAMETERIZED CLAUSE CONSTRAINTS 
%------------------------------------------------------------


%------------------------------------------------------------
%END OF PARAMETERIZED CLAUSE CONSTRAINTS 
%------------------------------------------------------------


%------------------------------------------------------------
%APPLICATION CONSTRAINTS 
%------------------------------------------------------------


%------------------------------------------------------------
%END OF APPLICATION CONSTRAINTS 
%------------------------------------------------------------


%------------------------------------------------------------
% UNIQUE  KEY CONSTRAINTS 
%------------------------------------------------------------


%------------------------------------------------------------
%END OF UNIQUE  KEY CONSTRAINTS 
%------------------------------------------------------------


%------------------------------------------------------------
% END OF CONSTRAINTS OF THIS BLOCK 
%------------------------------------------------------------



%------------------------------------------------------------
% COLUMN REPLACEMENT
%------------------------------------------------------------



%------------------------------------------------------------
% END OF COLUMN REPLACEMENT
%------------------------------------------------------------



%------------------------------------------------------------
%NULL CONSTRAINTS FOR OUTER BLOCK OF QUERY
%------------------------------------------------------------




%------------------------------------------------------------
%END OF NULL CONSTRAINTS FOR OUTER BLOCK OF QUERY
%------------------------------------------------------------



%------------------------------------------------------------
%BRANCHQUERY CONSTRAINTS
%------------------------------------------------------------



%------------------------------------------------------------
% BRANCH QUERY CONSTRAINTS FOR DIFFERENT GROUP BY COLUMN FROM PRIMARY QUERY
%------------------------------------------------------------


%------------------------------------------------------------
% BRANCH QUERY CONSTRAINTS FOR DIFFERENT GROUP BY COLUMN FROM OTHER BRANCH QUERIES
%------------------------------------------------------------


%------------------------------------------------------------
% BRANCH QUERY CONSTRAINTS FOR SAME GROUP BY COLUMN OF A BRANCH QUERY
%------------------------------------------------------------


%------------------------------------------------------------
% BRANCH QUERY GROUP BY CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
% PRIMARY KEY CONSTRAINTS FOR BRANCH QUERY
%------------------------------------------------------------


%------------------------------------------------------------
% FOREIGN KEY CONSTRAINTS FOR BRANCH QUERY
%------------------------------------------------------------


%------------------------------------------------------------
%NOT NULL CONSTRAINTS FOR BRANCHQUERY


%------------------------------------------------------------



%------------------------------------------------------------
%END OF BRANCHQUERY CONSTRAINTS
%------------------------------------------------------------


%------------------------------------------------------------
%NOT NULL CONSTRAINTS


%------------------------------------------------------------

ASSERT NOT ISNULL_BUDGET(O_DEPARTMENT[1].2);
ASSERT NOT ISNULL_DEPT_NAME(O_DEPARTMENT[1].0);
ASSERT NOT ISNULL_BUILDING(O_DEPARTMENT[1].1);

QUERY FALSE;
COUNTERMODEL;